"""
OutlineAgent - 技術記事アウトライン作成エージェント

このエージェントは技術記事の構造化されたアウトラインを作成する専門エージェントです。
TitlePlannerAgentから受け取ったタイトルを基に、読みやすく実用的なアウトラインを生成します。

主な機能:
- Markdownフォーマットでのアウトライン作成
- 初心者向けの構成設計
- 外部リンクの適切な配置
- DraftAgentへの自動ハンドオフ
"""

from agents import Agent
from tools.web_tools import web_search


def create_outline_agent() -> Agent:
    """
    OutlineAgentのインスタンスを作成します。
    
    このエージェントは以下の手順でアウトラインを作成します:
    1. 受け取ったタイトルを分析
    2. Web検索で関連情報を収集
    3. 初心者向けの構造化されたアウトラインを作成
    4. DraftAgentにハンドオフして記事本文生成を依頼
    
    Returns:
        Agent: 設定済みのOutlineAgentインスタンス
    """
    return Agent(
        name="OutlineAgent", 
        instructions=(
            "あなたは技術ブログライターです。与えられたタイトルに対してMarkdownアウトラインを作成します。\n\n"
            
            "【アウトライン仕様】\n"
            "- 冒頭に ## 導入\n"
            "  → 読者の興味を引く導入部分\n"
            "- その後 ## 見出し を3~5個\n"
            "  → メインコンテンツを論理的に構成\n"
            "  - 各H2の下に bullet で要点を3行以内\n"
            "    → 具体的な内容の概要を箇条書きで\n"
            "- 最後に ## まとめ\n"
            "  → 記事の要点を整理し、次のアクションを提示\n\n"
            
            "【フォーマット要件】\n"
            "- 外部リンクは `[テキスト](URL)` 形式で bullet 内に含める\n"
            "  → 信頼できる公式サイトやドキュメントのみ\n"
            "- コードを紹介したい場合は `### コード例` として囲むが、本文生成側に任せても可\n"
            "  → 実装詳細はDraftAgentが担当\n"
            "- 全体で 120 行を超えない\n"
            "  → 簡潔で読みやすい構成を維持\n\n"
            
            "【内容要件】\n"
            "- 初心者にもわかりやすい構成にする\n"
            "  → 専門用語は適切に説明\n"
            "- 実践的で具体的な内容を含める\n"
            "  → 読者が実際に行動できる内容\n"
            "- 段階的な学習フローを意識\n"
            "  → 基礎から応用へのスムーズな流れ\n\n"
            
            "【重要】アウトライン作成が完了したら、必ずDraftAgentにハンドオフして記事本文の生成を依頼してください。\n"
            "質問や確認は不要です。アウトライン完成後、即座にDraftAgentにハンドオフしてください。"
        ),
        tools=[web_search],
        # handoffsは後でcoordinator.pyで設定されます（循環参照を避けるため）
    ) 